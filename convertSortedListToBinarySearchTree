/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *build(ListNode* &head, int len)
    {
        if(len < 0)
        	return NULL;
    	int mid = len >> 1;
        
    	TreeNode *left = build(head, mid - 1);
    	TreeNode *parent = new TreeNode(head->val);
    	parent->left = left;
    	head = head->next;
    	parent->right = build(head,len - mid - 1);
    
    	return parent;
    }
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(!head)
        {
            return NULL;
        }
        int len = 0;
        ListNode *p = head;
        while(p)
        {
            p = p->next;
            len++;
        }
        p =head;
        return build(p, len - 1);
    }
};
