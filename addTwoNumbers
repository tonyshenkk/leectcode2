/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode *p1 = l1, *p2 = l2, *head = NULL, *p, *q;
        int flag = 0;
        while(p1 && p2)
        {
            p = new ListNode(p1->val + p2->val + flag);
            if(p->val > 9)
            {
                p->val -= 10;
                flag = 1;
            }
            else
                flag = 0;
            if(!head)
            {
                 head = p;
                 q = head;
            }
            else
            {
                q->next = p;
                q = p;
            }
            p1 = p1->next;
            p2 = p2->next;
        }
        ListNode *r = p1 ? p1: p2;
        while(r)
        {
            p = new ListNode(r->val + flag);
            if(p->val > 9)
            {
                p->val -= 10;
                flag = 1;
            }
            else
                flag = 0;
            if(!head)
            {
                 head = p;
                 q = head;
            }
            else
            {
                q->next = p;
                q = p;
            }
            r = r->next;
        }
        if(flag)
        {
            p =  new ListNode(flag);
            q->next = p;
        }
        return head;
    }
};
