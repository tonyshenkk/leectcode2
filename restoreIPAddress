class Solution {
public:
    bool isIp(string &s)
    {
        int len = s.size();
        if(len < 1 || len > 3 || (len != 1 && s[0] == '0'))
            return false;
        int t = 0;
        for(int i = 0; i <len; i++)
        {
            t = t * 10 + s[i] - '0';
        }
        if(t > 255)
            return false;
        else
            return true;
        
    }
    vector<string> restoreIpAddresses(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<string> res;
        int len = s.size();
        if(len < 4)
            return res;
        for(int i = 1; i < 4; i++)
        {
            for(int j = 1; j < 4; j++)
            {
                for(int k = 1; k < 4; k++)
                {
                    int t = i + j + k;
                    if(len - t > 0 && len - t <= 3)
                    {
                        string s1 = s.substr(0, i);
                        string s2 = s.substr(i, j);
                        string s3 = s.substr(i + j, k);
                        string s4 = s.substr(t, len - t);
                        if(isIp(s1) && isIp(s2) && isIp(s3) && isIp(s4))
                        {
                            string sol = s1 + "." + s2 + "." + s3 + "." + s4;
                            res.push_back(sol);
                        }
                    }
                }
            }
        }
        return res;
    }
};
