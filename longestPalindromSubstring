class Solution {
public:
    string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int len = s.length();
        if(len < 2)
            return s;
            
        string sub = "";
        int index = 0, maxLen = 1;
        for(int i = 0; i < len; i++)
        {
            for(int j = 1; i - j >= 0 && i + j < len; j++)
            {
                if(s.at(i - j) != s.at(i + j))
                    break;
                if(j * 2 + 1 > maxLen)
                {
                    index = i - j;
                    maxLen = j * 2 + 1;
                }
            }
            for(int j = 0; i >= j && i + j + 1< len; j++)
            {
                if(s.at(i - j) != s.at(i + j + 1))
                    break;
                if(j * 2 + 2 > maxLen)
                {
                    maxLen = j * 2 + 2;
                    index = i - j;
                }
            }
        }
        sub = s.substr(index, maxLen);
        return sub;
    }
};
