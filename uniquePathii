class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        
        int row = obstacleGrid.size();
        if(row < 1)
            return 0;
        if(obstacleGrid[0][0])
            return 0;
        int col = obstacleGrid[0].size();
        vector<vector<int>> step(row, vector<int>(col, 0));
        
        for(int i = 0; i < col; i++)
        {
            if(obstacleGrid[0][i] == 0)
            {
                step[0][i] = 1;
            }
            else
                break;
        }
        for(int i = 0; i < row; i++)
        {
            if(obstacleGrid[i][0] == 0)
            {
                step[i][0] = 1;
            }
            else
                break;
        }
        
        for(int i = 1; i < row; i++)
        {
            for(int j = 1; j < col; j++)
            {
                if(obstacleGrid[i][j] == 0)
                {
                    step[i][j] = step[i - 1][j] + step[i][j - 1];
                }
            }
        }
        return step[row - 1][col - 1];
    }
};
