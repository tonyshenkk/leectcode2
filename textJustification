class Solution {
public:
    vector<string> fullJustify(vector<string> &words, int L) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int len = words.size();
        int slen = 0, j, sp, fs, nums;
    	string str = "";
    	vector<string> res;
    	for(int i = 0; i < len;)
    	{
    		j = i;
    		while( j < len && (slen + words[j].length()) <= L)
    		{
    			slen += words[j].length() + 1;
    			j++;
    		}
    		slen--;
    		sp = L - slen;
            if (j >= len)
        	{
    			while(i != j)
    			{
    				str += words[i];
    				if (i != j - 1)
    				{
    					str += string(1, ' ');
    				}
    				i++;
    			}
                str += string(L - str.length(), ' ');
                res.push_back(str);
    			continue;
    		}
    		if (i == (j - 1))
    		{
    			str = words[i];
    			str += string(sp, ' ');
    			res.push_back(str);
    			str = "";
    			slen = 0;
    			i++;
    			continue;
    		}
    		nums = j - i - 1;
    		fs = sp % nums;
    		sp = sp / nums;
    		while (fs)
    		{
    			str += words[i];
    			str += string(sp + 2, ' ');
    			i++;
    			fs--;
    		}
    		while(i != j)
    		{
    			if(i != (j - 1))
    			{
    				str += words[i];
    				str += string(sp + 1, ' ');
    			}
    			else
    				str += words[i];
    			i++;
    		}
    		res.push_back(str);
    		str = "";
    		slen = 0;
    
    	}
    	return res;
    }
};
