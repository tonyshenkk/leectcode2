/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void recover(TreeNode *root, TreeNode *&pre, TreeNode *&p, TreeNode *&q)
    {
        if(!root)
        {
            return;
        }
        recover(root->left, pre, p, q);
        if(pre && pre->val > root->val)
        {
            if(!p)
            {
                p = pre;
            }
            q = root;
        }
        pre= root;
        recover(root->right, pre, p, q);
    }
    void recoverTree(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        TreeNode *pre = NULL;
        TreeNode *p = NULL;
        TreeNode *q = NULL;
        
        recover(root, pre, p, q);
        swap(p->val, q->val);
    }
};
