class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int len1 = word1.length(), len2 = word2.length();
    	if(len1 == 0)
    		return len2;
    	if(len2 == 0)
    		return len1;
    	vector<vector<int>>temp(len1, vector<int>(len2));
    
    	for(int i = 0; i < len1; i++)
    	{
    		if(word1[i] == word2[0])
    			temp[i][0] = i;
    		else if (i > 0)
    		{
    			temp[i][0] = temp[i - 1][0] + 1;
    		}
    		else
    			temp[i][0] = 1;
    
    	}
    	for(int i = 0; i < len2; i++)
    	{
    		if(word1[0]== word2[i])
    			temp[0][i] = i;
    		else if (i > 0)
    		{
    			temp[0][i] = temp[0][i - 1] + 1;
    		}
    		else
    			temp[0][i] = 1;
    			
    	}
    
    	for(int i = 1; i < len1; i++)
    	{
    		for(int j = 1; j < len2; j++)
    		{
    			if(word1[i] == word2[j])
    				temp[i][j] = temp[i - 1][j - 1];
    			else
    				temp[i][j] = min(min(temp[i - 1][j], temp[i][j - 1]), temp[i - 1][j - 1]) + 1;
    		}
    	}
    	return temp[len1 - 1][len2 - 1];
    }
};
